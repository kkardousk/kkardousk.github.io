{
  "hash": "721d75717bd60b749c8c0e0b208c7186",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: |\n  <div class=\"custom-title-block\" style=\"font-size: 1.2em;\">\n    <span style=\"color:#000000;\">Replication of below article's Data and Visualizations</span><br>\n    <span style=\"color:#333333; font-size:0.8em; white-space: nowrap\">\"Has International Travel <br> to the U.S. Really Collapsed?\"</span><br>\n    <span style=\"color:#666666; font-size:0.7em;\">\n      By <a href=\"https://www.nytimes.com/interactive/2025/04/30/world/us-travel-decline.html\" \n      target=\"_blank\" style=\"color:#000000; text-decoration:underline;\">Josh Holder, Niraj Chokshi and Samuel Granados</a>\n    </span><br>\n    <span style=\"font-size:0.8em; color:#333333; white-space: nowrap\">\n      Karim K. Kardous\n      <a href='mailto:kardouskarim@gmail.com' style='margin-left: 9px; font-size: 0.9em;'>\n        <i class='bi bi-envelope'></i>\n      </a>\n      <a href='https://github.com/kkardousk' style='margin-left: 5px; font-size: 0.9em;'>\n        <i class='bi bi-github'></i>\n      </a>\n    </span>\n  </div>\nformat:\n  html:\n    toc: true\n    toc-depth: 4\n    toc-expand: true\n    toc-title: 'Jump To'\n    number-depth: 2\n    fig-format: retina\n    fig-dpi: 300\n    code-link: true # requires both downlit and xml2 to be downloaded\n    code-fold: true\n    code-summary: '<i class=\"bi-code-slash\"></i> Show the code'\n    # code-overflow: wrap\n    code-tools:\n      toggle: true  # adds \"Show All / Hide All\"; also allows for all code copy (at once as quarto doc)\n    css: styles.css\n    highlight-style: github-dark\n    df-print: paged\n    page-layout: article\n    embed-resources: true\n    smooth-scroll: true\n    link-external-icon: false\n    link-external-newwindow: true\n    fontsize: 1.1em\n    linestretch: 1\n    linespace: 1\n    html-math-method: katex\n    linkcolor: '#D35400'\nexecute:\n  echo: true\n  warning: false\n  message: false\n  info: false\n  cache: false\n  freeze: auto\neditor: visual\n---\n\n\n\n\n## *International Travel Into the US Prelude* {.text-justify}\n\n**About the data/article in a nutshell:** This New York Times article, backed by numbers from government agencies for the US & Canada, attempts to show whether International Travel into the US has dipped as a result of President Trump's administration and policies relating to broad tariffs, tight border control, etc. <br> The **main takeaway** is that while travel originating from Asia into the United States has timidly increased, that from Europe has stalled, meanwhile that of Canada has sharply decreased, especially when it comes to car crossings into the US; relative to air travel.<br> Despite a drastic drop for US bound travel from Canada, overall, travel into the United States has remained fairly undisturbed.<br>\n\nOn my choices here, I decided to replicate/plot all outputs (minus the second one) with at best identical data points and visuals, and/or matching as much as possible the ones that were PNG (images) embedded into the article (as opposed to scrips/tables/or otherwise HMTL wrappers containing actual data points). With a solid few weeks time span having passed between article publication date and the time of this writing, and given that the numbers reported at the time were fairly recent, numbers on March 2025 when the article gets published in April 2025, any preliminary numbers that might have got adjusted since then will not allow for 100% match in said numbers.<br>\n\nThe one piece that I don't replicate in this project is the second one; \"International arrivals at major U.S. airports\"; it's embedded into the article as a PNG, and would require a lot of work to reverse engineer the foundational data series behind it after scanning said PNG; but more importantly, I try to go for replicating new/unconventional visualizations when this one specifically, at the end of the day, albeit powerful, boils down to a couple of line plots. <br>\nIf you like to give the original article a read, you can find it [here](https://www.nytimes.com/interactive/2025/04/30/world/us-travel-decline.html).\n\n**Overall Strategy for building first plot:** One way to recreate the first visual; which shows in a report-card style the % change in flight bookings into the US comparing (Jan 1st through April 26, 2024) to (same period this year), and looking at 1) overall (International), 2) European, 3) Asian, and 4) Canadian inbound travel; is to generate 4 tiles with a subtle vertical tick/separator between each of those said 4 percentages. The time frame of visits for both years covers Summer; which allows for 'apples to apples' comparisons but also focuses on an upcoming period of the year - very near future, meaning that said bookings are more likely than not to be definitive for a vast majority of them.\n\nBelow code chunk loads in libraries used and configures and activates/sets a couple of themes to be used throughout the code \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#|echo: false\n#|message: false\n#|warning: false\n#|include: false\n# check if the required package 'emo' is installed;\n# if not, it might mean your renv environment is not fully restored.\n# running `renv::restore()` will install all necessary packages\n# to ensure consistent package versions for building this quarto document,\n# effectively 'containerizing' your project and protecting it from future package changes.\nif (!requireNamespace(\"emo\", quietly = TRUE)) {\n  message(\"\\nIt looks like your environment might not be restored.\\nRun `renv::restore()` to install required packages.\\n\")\n}\n\n# load packages\nlibrary(xml2)\nlibrary(downlit)\nlibrary(gdtools)\nlibrary(tidyverse)\nlibrary(quarto)\nlibrary(chromote)\nlibrary(here)\nlibrary(tidycensus)\nlibrary(janitor)\nlibrary(purrr)\nlibrary(ggtext)\nlibrary(ggshadow)\nlibrary(ggiraph)\nlibrary(gfonts)\nlibrary(showtext)\nlibrary(ggborderline)\nlibrary(grid)\nlibrary(patchwork)\nlibrary(shiny)\nlibrary(rvest)\nlibrary(htmltools)\nlibrary(gt)\nlibrary(rsvg)\nlibrary(magick)\nlibrary(stringr)\nlibrary(ggimage)\nlibrary(qs)\nlibrary(emo)\n\nfont_add(family = \"franklin-medium\", regular = \"renv/library/macos/R-4.5/aarch64-apple-darwin20/sysfonts/fonts/Libre_Franklin/static/LibreFranklin-Medium.ttf\") \n\ntheme_set_custom <- function() {\n  \n  # loading google Fonts\n  sysfonts::font_add_google(\"Libre Franklin\", \"franklin\")\n  sysfonts::font_add(\n    family = \"franklin-medium\", \n    regular = \"renv/library/macos/R-4.5/aarch64-apple-darwin20/sysfonts/fonts/Libre_Franklin/static/LibreFranklin-Medium.ttf\"\n  )\n  showtext::showtext_auto()\n\n  # applying ggplot2 theme\n  ggplot2::theme_set(\n    ggplot2::theme_minimal(base_family = \"franklin\") +\n      ggplot2::theme(\n        panel.background = ggplot2::element_rect(fill = \"#F9F9F9\", color = NA),\n        plot.background = ggplot2::element_rect(fill = \"#F9F9F9\", color = NA)\n      )\n  )\n}\n\ntheme_set_custom()\n```\n:::\n\n\n\n\n## **Travel Score Cards**\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#|echo: false\n#|message: false\n#|warning: false\n#|include: true\n\ntheme_set_custom()\n\np1_tribble <- tribble(\n  ~perc_change, ~label, ~region, ~fill, ~width_cm, ~ length_cm, \n  '-1.5%', 'International arrivals\\n at U.S. airports', 'International','#969696', 170 / 300 * 2.54, 80 / 300 * 2.54, # converting into actual cm, controlling for resolution set (300 or print quality)\n  '-2%', 'Summer flight\\n bookings from Europe', 'Europe', '#969696', 130 / 300 * 2.54, 77 / 300 * 2.54,\n  '+4%', 'Summer flight\\n bookings from Asia', 'Asia', '#2b9d6c', 130 / 300 * 2.54, 77/ 300 * 2.54,\n  '-21%', 'Summer flight\\n bookings from Canada', 'Canada', '#d65f00', 164 / 300 * 2.54, 77 / 300 * 2.54\n)\n\n# here i go for an interactive process whereby each plot is created separately in a list of plots; one main reason is that the boxes/rectangles are of different sizes. \ntile_plot_rounded <- function(perc_change, label_text, fill, width_cm, length_cm, scaler = 3) { # 3 was best here\n  library(grid) # for some reason, roundrectGrob() wasn't running without first loading grid here too (even if called earlier when loading all packages)\n  ggplot() +\n    ggtitle(label_text) + # set the label as thes plot sub-title\n    annotation_custom(\n      grob = roundrectGrob(\n        width = unit(width_cm * scaler, \"cm\"),    \n        height = unit(length_cm * scaler, \"cm\"), \n        r = unit(0.1, \"npc\"),  # corner radius, the higher the values the more prononcoumced the roundedness\n        gp = gpar(fill = fill, col = NA)\n      ),\n      xmin = 0, xmax = 6, ymin = 0, ymax = 3\n    ) +\n    annotate(\n    \"text\", \n      x = 3, y = 1.5,\n      hjust = 0.5, vjust = 0.5,\n      size = 10, # text size for perc_change\n      label = perc_change,\n      color = 'white', \n      family = 'franklin',\n      fontface = 'bold'\n    ) +\n    xlim(0, 6) + ylim(0, 3) +\n    coord_fixed(ratio = 1) + \n    theme_void() +\n    theme(\n      plot.margin = margin(4, 2, 2, 2), # small margins add around each plot for more subtitle room\n      plot.title = element_text(hjust = 0.5, size = 14, family = 'franklin-medium', margin = margin(b = 5)) # this is a midway font face between plain and bold\n    )\n}\n# loop through labels, fills, and dimensions, and including 'label' for the title\ntile_plots <- pmap(\n  list(\n    perc_change = p1_tribble$perc_change,\n    label_text = p1_tribble$label, \n    fill = p1_tribble$fill,\n    width_cm = p1_tribble$width_cm,\n    length_cm = p1_tribble$length_cm\n  ),\n  tile_plot_rounded \n)\n\n# assign one row so that all plots are side by side and not potentially stacked (vertically)\np1 <- wrap_plots(\n  tile_plots, nrow = 1\n) \n# adds after wrap a title\np_final <- p1 + \n  plot_annotation(\n    title = 'Travel compared with last year',\n    caption = 'Sources: U.S. Customs and Border Protection and the Airlines Reporting Corporation',\n    theme = theme(\n      plot.title = element_text(size = 20, family = 'franklin', face = \"bold\", hjust = 0.5, margin = margin(t = -10, b = 10)),\n      plot.caption = element_text(size = 9, family = 'franklin-medium', face = 'bold', colour = '#727272', hjust = 0.15)\n      )\n  ) \np_final\n```\n\n::: {.cell-output-display}\n![](holder-chokshi-granados-article-TravelToUS_files/figure-html/unnamed-chunk-2-1.png){width=2700}\n:::\n:::\n\n\n\n\n\n## **Confidence, but Warning Signs**\n\nFor the below visualization, I opted to use gt() from `{gt}` package as it naturally comes to mind when trying to build 'great tables', yes pun intended. A few things to mention here to explain my thought process. <br>\n\n-   Clearly the tables go over the left/right margins of the article layout in the original. While our dimensions may allow for all 3 tables to fit side by side, for replication purposes, we 'push out' the margins or reduce them to make them all 3 tables fit side by side.<br>\n-   Second, one other thing that stands out is the clear customization of the third column, the percent change actual values, where a target bar plot of some sort is drawn. To replicate that, one way (potentially only way) is to use `text_transform()`, in tandem with a custom function using `fn` argument that will incorporate mostly css code. This allows for greater customization down to the minutiae.<br>\n-   Said last column is also centered and anchored using a small vertical tick (this is most visible in the middle plot where values alternate between negative (left) and positive (right) of tick. <br>\n-   From the tick each value is gauged on their max for that table, to get a sense of proportionality and make sure each bar's no. of pixels proportionally match to the greatest (absolute) value per table.\n\nBelow I show the code that pulls int the data, embedded in an html table; so that once the node or in this case `css` element name is identified, the rest is fairly easy.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#|echo: false\n#|message: false\n#|warning: false\n#|include: true\n\n## p3; table to embed in gt() \n# read in the correspoinding table node\nurl <- 'https://www.nytimes.com/interactive/2025/04/30/world/us-travel-decline.html'\nraw_table <- \n  read_html(url) |> \n  html_element(css = '.svelte-5z6yzk') |> \n  html_table() |> \n  select(country = 1, perc_change = 2) |> \n  filter(perc_change != '')\n\n# processing the tibble\nindividual_country_changes <- \n  raw_table |> \n  mutate(\n    perc_change_num = parse_number(perc_change),\n    left_right_ended = if_else(perc_change_num <= -.02, 'left', 'right'),\n    # below also going to be used to section off the table into 3 columns\n    change_direction = case_when(\n      between(perc_change_num, -2, 1) ~ 'stalled',\n      perc_change_num < 0 ~ 'decreased',\n      .default = 'increased') \n  ) |> \n  mutate(\n    groupings = case_when(\n      n() == 11 ~ 1,\n      n() ==  6 ~ 2,\n      .default = 3),\n    .by = change_direction\n    ) \n```\n:::\n\n\n\n\n::: full-width-block\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#|echo: false\n#|message: false\n#|warning: false\n#|include: false\n#|results: 'asis' \n\ngt_table_custom_ <- function(hex, direction, title = NULL) {\n  \n  title_ <- title\n  hex_to_pass_in_fn <- hex\n  dir_to_pass_in_fn <- direction\n  \n  individual_country_changes |> \n    filter(groupings == {{direction}}) |> \n    select(1:3) |> \n    gt() |> \n    text_transform(\n      locations = cells_body(columns = perc_change_num),\n      fn = function(x) {\n        x_num <- as.numeric(x)\n        max_val <- max(abs(x_num), na.rm = TRUE)\n        if(max_val == 0) max_val <- 1 \n        widths_for_glue <- abs(x_num) / max_val * if (dir_to_pass_in_fn == 2) 8 else 100 # default scaling may look misleaading for 'no change' countries, so massively reduced here otherwise center table values get way inflated for what they are ([-2; 1])\n        \n        # loop thru values of perc_change column and isolate each element so that it can pass thru str_glue() without length(x) > 1 error from if/else statement\n        purrr::map_chr(seq_along(x_num), function(x) {\n          width <- widths_for_glue[x]\n          val <- x_num[x]\n          \n          if(dir_to_pass_in_fn == 2) {\n            direction_to_go <- if(val < 0) \"right\" else \"left\"\n            translate_offset <- if(val <= -2) \"20%\" else \"0\" # translate back to the origin for values >= -.02 (this gets applied only for no-change countries/middle table)\n            str_glue(\n              '<div style=\"display: flex; align-items: center; justify-content: center;\">\n                 <div style=\"position: relative; width: 100%; height: 8px;\">\n                   <div style=\"position: absolute; left: 50%; top: -4px; bottom: 4px;width: 2px; height: 16px; background: #ccc;\"></div>\n                   <div style=\"position: absolute; {direction_to_go}: 50%; top: 0; \n                               background: {hex_to_pass_in_fn}; height: 8px; width: {width}%; \n                               transform: translateX({translate_offset}); \n                               border-radius: 3px;\"></div>\n                 </div>\n               </div>'\n            )\n          }  # for below, we treat direction 1 (very negative change) and 2 (very positive) virtually the same, only former goes from center to left while latter from center to right\n          else {\n            direction_to_go <- if(direction == 1) \"right\" else \"left\"\n            str_glue(\n              '<div style=\"display: flex; align-items: center; justify-content: center;\">\n                 <div style=\"position: relative; width: 50%; height: 8px;\">\n                   <div style=\"position: absolute; left: 50%; top: -8px; width: 2px; height: 16px; background: #ccc; transform: translateX(-1px);\"></div>\n                   <div style=\"position: absolute; {direction_to_go}: 50%; top: -4px; background: {hex_to_pass_in_fn}; height: 8px; width: {width}%; border-radius: 3px;\"></div>  \n                 </div>\n               </div>'\n            )\n          }\n        })\n      }\n    ) |>\n    cols_align(\n      align = \"center\",\n      columns = perc_change\n    ) |> \n    tab_style(\n      style = cell_text(color = hex),\n      locations = cells_body(columns = perc_change)\n    ) |> \n    tab_style(\n      style = css(\"white-space\" = \"nowrap\"),\n      locations = cells_body(columns = country)\n      ) |> \n    cols_label(\n      country = md(\"**Country**\"),\n      perc_change = \"\",\nperc_change_num = htmltools::HTML(\"<span style='white-space: nowrap;'><strong>Change vs. 2024</strong></span>\")    \n) |> \n    opt_table_font(\n      font = c(\"franklin-medium\"),\n      weight = 500\n    ) |> \n    tab_options(\n      heading.align = \"left\",\n      table.width = pct(100), \n      heading.padding = px(10),\n      table.border.top.style = \"hidden\",             \n      column_labels.border.bottom.style = \"solid\",\n      column_labels.border.bottom.width = px(1),\n      column_labels.border.bottom.color = \"white\",\n    ) |> \n    cols_width(\n    country ~ pct(50),\n    perc_change ~ pct(50),\n    perc_change_num ~ pct(50)\n    ) \n}\n\n# generate and assign tables below \ntbl1 <- gt_table_custom_(hex = '#d65f00', direction = 1) |> \n  tab_header(\n    title = md(\"**Where U.S.-bound summer flight bookings have <span style='color: #d65f00;'> decreased </span>...**\")\n  )\ntbl2 <- gt_table_custom_(hex = '#666666', direction = 2) |> \n  tab_header(\n    title = md(\"<span style='color: #666666;'>**... stayed about the same ...**</span>\")\n    # subtitle = md(\"<span style='color: #FFFFFF;'>adding artificial padding.**</span>\")\n  ) \n\ntbl3 <- gt_table_custom_(hex = '#2b9d6c', direction = 3) |> \n    tab_header(\n    title = md(\"**... and <span style='color: #2b9d6c;'>increased</span>.**\")\n    # subtitle = md(\"<span style='color: #FFFFFF;'>adding artificial.** padding</span>\")\n  ) \n\ntables_row_layout <- htmltools::tags$div(\n  style = \"display: flex; justify-content: space-between; align-items: flex-start; gap: 20px; width: 100%; padding: 0 10px;\",\n  htmltools::tags$div(style = \"flex: 1; min-width: 0;\", tbl1), \n  htmltools::tags$div(style = \"flex: 1; min-width: 0;\", tbl2),\n  htmltools::tags$div(style = \"flex: 1; min-width: 0;\", tbl3)\n)\n\ncaption_text <- \"<span style='color:#707070;'>Source: Airlines Reporting Corporation &bull; Data covers flight bookings made between Feb. 1 and April 13 for travel between Memorial Day and Labor Day, compared to the same period last year.</span>\"\ncaption_html_content <- HTML(caption_text) \nleft_padding_value <- \"20px\" # adding some padding so that caption moves slightl to the right to match original's caption poisiton \n\ncaption_styled_div <- htmltools::tags$div(\n  style = paste(\n    \"width: 50%;\",  # overall visual span\n    \"max-width: 1000px;\", # cap the max width of the caption\n    \"margin: 5px auto 0 auto;\", \n    \"text-align: left;\",\n    \"font-family: 'franklin-medium', 'Libre Franklin', Arial, sans-serif;\", # prioritize 'franklin-medium'\n    \"font-weight: 500;\",                                                 \n    \"font-size: 0.85em;\", \n    \"line-height: 1.1;\",\n    paste0(\"padding-left: \", left_padding_value, \";\") \n  ),\n  caption_html_content\n)\n\n# parent div will stack them vertically and can be used to constrain overall width.\noverall_final_layout <- htmltools::tags$div(\n  style = \"width: 100%; max-width: 1900px; margin: 0 auto; padding-bottom: 1px;\",\n  tables_row_layout,\n  caption_styled_div\n)\n# final output\noverall_final_layout\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div style=\"width: 100%; max-width: 1900px; margin: 0 auto; padding-bottom: 1px;\">\n<div style=\"display: flex; justify-content: space-between; align-items: flex-start; gap: 20px; width: 100%; padding: 0 10px;\">\n<div style=\"flex: 1; min-width: 0;\">\n<div id=\"hgiuugomvb\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#hgiuugomvb table {\n  font-family: franklin-medium, system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#hgiuugomvb thead, #hgiuugomvb tbody, #hgiuugomvb tfoot, #hgiuugomvb tr, #hgiuugomvb td, #hgiuugomvb th {\n  border-style: none;\n}\n\n#hgiuugomvb p {\n  margin: 0;\n  padding: 0;\n}\n\n#hgiuugomvb .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: 500;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: 100%;\n  border-top-style: hidden;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#hgiuugomvb .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#hgiuugomvb .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#hgiuugomvb .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 9px;\n  padding-bottom: 11px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#hgiuugomvb .gt_heading {\n  background-color: #FFFFFF;\n  text-align: left;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#hgiuugomvb .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#hgiuugomvb .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 1px;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#hgiuugomvb .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: 500;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#hgiuugomvb .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: 500;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#hgiuugomvb .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#hgiuugomvb .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#hgiuugomvb .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 1px;\n  border-bottom-color: #FFFFFF;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#hgiuugomvb .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#hgiuugomvb .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#hgiuugomvb .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#hgiuugomvb .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#hgiuugomvb .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#hgiuugomvb .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#hgiuugomvb .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#hgiuugomvb .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#hgiuugomvb .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#hgiuugomvb .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#hgiuugomvb .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#hgiuugomvb .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#hgiuugomvb .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#hgiuugomvb .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#hgiuugomvb .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#hgiuugomvb .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#hgiuugomvb .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#hgiuugomvb .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#hgiuugomvb .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#hgiuugomvb .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#hgiuugomvb .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#hgiuugomvb .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#hgiuugomvb .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#hgiuugomvb .gt_left {\n  text-align: left;\n}\n\n#hgiuugomvb .gt_center {\n  text-align: center;\n}\n\n#hgiuugomvb .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#hgiuugomvb .gt_font_normal {\n  font-weight: normal;\n}\n\n#hgiuugomvb .gt_font_bold {\n  font-weight: bold;\n}\n\n#hgiuugomvb .gt_font_italic {\n  font-style: italic;\n}\n\n#hgiuugomvb .gt_super {\n  font-size: 65%;\n}\n\n#hgiuugomvb .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#hgiuugomvb .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#hgiuugomvb .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#hgiuugomvb .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#hgiuugomvb .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#hgiuugomvb .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#hgiuugomvb .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#hgiuugomvb .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#hgiuugomvb div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" style=\"table-layout:fixed;width:100%;\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <colgroup>\n    <col style=\"width:50%;\"/>\n    <col style=\"width:50%;\"/>\n    <col style=\"width:50%;\"/>\n  </colgroup>\n  <thead>\n    <tr class=\"gt_heading\">\n      <td colspan=\"3\" class=\"gt_heading gt_title gt_font_normal gt_bottom_border\" style><span data-qmd-base64=\"KipXaGVyZSBVLlMuLWJvdW5kIHN1bW1lciBmbGlnaHQgYm9va2luZ3MgaGF2ZSA8c3BhbiBzdHlsZT0nY29sb3I6ICNkNjVmMDA7Jz4gZGVjcmVhc2VkIDwvc3Bhbj4uLi4qKg==\"><span class='gt_from_md'><strong>Where U.S.-bound summer flight bookings have <span style='color: #d65f00;'> decreased </span>…</strong></span></span></td>\n    </tr>\n    \n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"country\"><span data-qmd-base64=\"KipDb3VudHJ5Kio=\"><span class='gt_from_md'><strong>Country</strong></span></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"perc_change\"></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"perc_change_num\"><span style='white-space: nowrap;'><strong>Change vs. 2024</strong></span></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"country\" class=\"gt_row gt_left\" style=\"white-space:nowrap;\">Canada</td>\n<td headers=\"perc_change\" class=\"gt_row gt_center\" style=\"color: #D65F00;\">-21%</td>\n<td headers=\"perc_change_num\" class=\"gt_row gt_right\"><div style=\"display: flex; align-items: center; justify-content: center;\">\n  <div style=\"position: relative; width: 50%; height: 8px;\">\n    <div style=\"position: absolute; left: 50%; top: -8px; width: 2px; height: 16px; background: #ccc; transform: translateX(-1px);\"></div>\n    <div style=\"position: absolute; right: 50%; top: -4px; background: #d65f00; height: 8px; width: 100%; border-radius: 3px;\"></div>  \n  </div>\n</div></td></tr>\n    <tr><td headers=\"country\" class=\"gt_row gt_left\" style=\"white-space:nowrap;\">Netherlands</td>\n<td headers=\"perc_change\" class=\"gt_row gt_center\" style=\"color: #D65F00;\">-17%</td>\n<td headers=\"perc_change_num\" class=\"gt_row gt_right\"><div style=\"display: flex; align-items: center; justify-content: center;\">\n  <div style=\"position: relative; width: 50%; height: 8px;\">\n    <div style=\"position: absolute; left: 50%; top: -8px; width: 2px; height: 16px; background: #ccc; transform: translateX(-1px);\"></div>\n    <div style=\"position: absolute; right: 50%; top: -4px; background: #d65f00; height: 8px; width: 80.952380952381%; border-radius: 3px;\"></div>  \n  </div>\n</div></td></tr>\n    <tr><td headers=\"country\" class=\"gt_row gt_left\" style=\"white-space:nowrap;\">Germany</td>\n<td headers=\"perc_change\" class=\"gt_row gt_center\" style=\"color: #D65F00;\">-12%</td>\n<td headers=\"perc_change_num\" class=\"gt_row gt_right\"><div style=\"display: flex; align-items: center; justify-content: center;\">\n  <div style=\"position: relative; width: 50%; height: 8px;\">\n    <div style=\"position: absolute; left: 50%; top: -8px; width: 2px; height: 16px; background: #ccc; transform: translateX(-1px);\"></div>\n    <div style=\"position: absolute; right: 50%; top: -4px; background: #d65f00; height: 8px; width: 57.1428571428571%; border-radius: 3px;\"></div>  \n  </div>\n</div></td></tr>\n    <tr><td headers=\"country\" class=\"gt_row gt_left\" style=\"white-space:nowrap;\">Ecuador</td>\n<td headers=\"perc_change\" class=\"gt_row gt_center\" style=\"color: #D65F00;\">-11%</td>\n<td headers=\"perc_change_num\" class=\"gt_row gt_right\"><div style=\"display: flex; align-items: center; justify-content: center;\">\n  <div style=\"position: relative; width: 50%; height: 8px;\">\n    <div style=\"position: absolute; left: 50%; top: -8px; width: 2px; height: 16px; background: #ccc; transform: translateX(-1px);\"></div>\n    <div style=\"position: absolute; right: 50%; top: -4px; background: #d65f00; height: 8px; width: 52.3809523809524%; border-radius: 3px;\"></div>  \n  </div>\n</div></td></tr>\n    <tr><td headers=\"country\" class=\"gt_row gt_left\" style=\"white-space:nowrap;\">Mexico</td>\n<td headers=\"perc_change\" class=\"gt_row gt_center\" style=\"color: #D65F00;\">-9%</td>\n<td headers=\"perc_change_num\" class=\"gt_row gt_right\"><div style=\"display: flex; align-items: center; justify-content: center;\">\n  <div style=\"position: relative; width: 50%; height: 8px;\">\n    <div style=\"position: absolute; left: 50%; top: -8px; width: 2px; height: 16px; background: #ccc; transform: translateX(-1px);\"></div>\n    <div style=\"position: absolute; right: 50%; top: -4px; background: #d65f00; height: 8px; width: 42.8571428571429%; border-radius: 3px;\"></div>  \n  </div>\n</div></td></tr>\n    <tr><td headers=\"country\" class=\"gt_row gt_left\" style=\"white-space:nowrap;\">Dom. Rep.</td>\n<td headers=\"perc_change\" class=\"gt_row gt_center\" style=\"color: #D65F00;\">-9%</td>\n<td headers=\"perc_change_num\" class=\"gt_row gt_right\"><div style=\"display: flex; align-items: center; justify-content: center;\">\n  <div style=\"position: relative; width: 50%; height: 8px;\">\n    <div style=\"position: absolute; left: 50%; top: -8px; width: 2px; height: 16px; background: #ccc; transform: translateX(-1px);\"></div>\n    <div style=\"position: absolute; right: 50%; top: -4px; background: #d65f00; height: 8px; width: 42.8571428571429%; border-radius: 3px;\"></div>  \n  </div>\n</div></td></tr>\n    <tr><td headers=\"country\" class=\"gt_row gt_left\" style=\"white-space:nowrap;\">Switzerland</td>\n<td headers=\"perc_change\" class=\"gt_row gt_center\" style=\"color: #D65F00;\">-8%</td>\n<td headers=\"perc_change_num\" class=\"gt_row gt_right\"><div style=\"display: flex; align-items: center; justify-content: center;\">\n  <div style=\"position: relative; width: 50%; height: 8px;\">\n    <div style=\"position: absolute; left: 50%; top: -8px; width: 2px; height: 16px; background: #ccc; transform: translateX(-1px);\"></div>\n    <div style=\"position: absolute; right: 50%; top: -4px; background: #d65f00; height: 8px; width: 38.0952380952381%; border-radius: 3px;\"></div>  \n  </div>\n</div></td></tr>\n    <tr><td headers=\"country\" class=\"gt_row gt_left\" style=\"white-space:nowrap;\">China</td>\n<td headers=\"perc_change\" class=\"gt_row gt_center\" style=\"color: #D65F00;\">-7%</td>\n<td headers=\"perc_change_num\" class=\"gt_row gt_right\"><div style=\"display: flex; align-items: center; justify-content: center;\">\n  <div style=\"position: relative; width: 50%; height: 8px;\">\n    <div style=\"position: absolute; left: 50%; top: -8px; width: 2px; height: 16px; background: #ccc; transform: translateX(-1px);\"></div>\n    <div style=\"position: absolute; right: 50%; top: -4px; background: #d65f00; height: 8px; width: 33.3333333333333%; border-radius: 3px;\"></div>  \n  </div>\n</div></td></tr>\n    <tr><td headers=\"country\" class=\"gt_row gt_left\" style=\"white-space:nowrap;\">South Korea</td>\n<td headers=\"perc_change\" class=\"gt_row gt_center\" style=\"color: #D65F00;\">-5%</td>\n<td headers=\"perc_change_num\" class=\"gt_row gt_right\"><div style=\"display: flex; align-items: center; justify-content: center;\">\n  <div style=\"position: relative; width: 50%; height: 8px;\">\n    <div style=\"position: absolute; left: 50%; top: -8px; width: 2px; height: 16px; background: #ccc; transform: translateX(-1px);\"></div>\n    <div style=\"position: absolute; right: 50%; top: -4px; background: #d65f00; height: 8px; width: 23.8095238095238%; border-radius: 3px;\"></div>  \n  </div>\n</div></td></tr>\n    <tr><td headers=\"country\" class=\"gt_row gt_left\" style=\"white-space:nowrap;\">India</td>\n<td headers=\"perc_change\" class=\"gt_row gt_center\" style=\"color: #D65F00;\">-4%</td>\n<td headers=\"perc_change_num\" class=\"gt_row gt_right\"><div style=\"display: flex; align-items: center; justify-content: center;\">\n  <div style=\"position: relative; width: 50%; height: 8px;\">\n    <div style=\"position: absolute; left: 50%; top: -8px; width: 2px; height: 16px; background: #ccc; transform: translateX(-1px);\"></div>\n    <div style=\"position: absolute; right: 50%; top: -4px; background: #d65f00; height: 8px; width: 19.047619047619%; border-radius: 3px;\"></div>  \n  </div>\n</div></td></tr>\n    <tr><td headers=\"country\" class=\"gt_row gt_left\" style=\"white-space:nowrap;\">Poland</td>\n<td headers=\"perc_change\" class=\"gt_row gt_center\" style=\"color: #D65F00;\">-4%</td>\n<td headers=\"perc_change_num\" class=\"gt_row gt_right\"><div style=\"display: flex; align-items: center; justify-content: center;\">\n  <div style=\"position: relative; width: 50%; height: 8px;\">\n    <div style=\"position: absolute; left: 50%; top: -8px; width: 2px; height: 16px; background: #ccc; transform: translateX(-1px);\"></div>\n    <div style=\"position: absolute; right: 50%; top: -4px; background: #d65f00; height: 8px; width: 19.047619047619%; border-radius: 3px;\"></div>  \n  </div>\n</div></td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n</div>\n<div style=\"flex: 1; min-width: 0;\">\n<div id=\"vesqdwvhdu\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#vesqdwvhdu table {\n  font-family: franklin-medium, system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#vesqdwvhdu thead, #vesqdwvhdu tbody, #vesqdwvhdu tfoot, #vesqdwvhdu tr, #vesqdwvhdu td, #vesqdwvhdu th {\n  border-style: none;\n}\n\n#vesqdwvhdu p {\n  margin: 0;\n  padding: 0;\n}\n\n#vesqdwvhdu .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: 500;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: 100%;\n  border-top-style: hidden;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#vesqdwvhdu .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#vesqdwvhdu .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#vesqdwvhdu .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 9px;\n  padding-bottom: 11px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#vesqdwvhdu .gt_heading {\n  background-color: #FFFFFF;\n  text-align: left;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#vesqdwvhdu .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#vesqdwvhdu .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 1px;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#vesqdwvhdu .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: 500;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#vesqdwvhdu .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: 500;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#vesqdwvhdu .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#vesqdwvhdu .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#vesqdwvhdu .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 1px;\n  border-bottom-color: #FFFFFF;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#vesqdwvhdu .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#vesqdwvhdu .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#vesqdwvhdu .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#vesqdwvhdu .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#vesqdwvhdu .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#vesqdwvhdu .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#vesqdwvhdu .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vesqdwvhdu .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#vesqdwvhdu .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#vesqdwvhdu .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#vesqdwvhdu .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vesqdwvhdu .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#vesqdwvhdu .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#vesqdwvhdu .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#vesqdwvhdu .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vesqdwvhdu .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#vesqdwvhdu .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#vesqdwvhdu .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#vesqdwvhdu .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#vesqdwvhdu .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#vesqdwvhdu .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vesqdwvhdu .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#vesqdwvhdu .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vesqdwvhdu .gt_left {\n  text-align: left;\n}\n\n#vesqdwvhdu .gt_center {\n  text-align: center;\n}\n\n#vesqdwvhdu .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#vesqdwvhdu .gt_font_normal {\n  font-weight: normal;\n}\n\n#vesqdwvhdu .gt_font_bold {\n  font-weight: bold;\n}\n\n#vesqdwvhdu .gt_font_italic {\n  font-style: italic;\n}\n\n#vesqdwvhdu .gt_super {\n  font-size: 65%;\n}\n\n#vesqdwvhdu .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#vesqdwvhdu .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#vesqdwvhdu .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#vesqdwvhdu .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#vesqdwvhdu .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#vesqdwvhdu .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#vesqdwvhdu .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#vesqdwvhdu .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#vesqdwvhdu div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" style=\"table-layout:fixed;width:100%;\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <colgroup>\n    <col style=\"width:50%;\"/>\n    <col style=\"width:50%;\"/>\n    <col style=\"width:50%;\"/>\n  </colgroup>\n  <thead>\n    <tr class=\"gt_heading\">\n      <td colspan=\"3\" class=\"gt_heading gt_title gt_font_normal gt_bottom_border\" style><span data-qmd-base64=\"PHNwYW4gc3R5bGU9J2NvbG9yOiAjNjY2NjY2Oyc+KiouLi4gc3RheWVkIGFib3V0IHRoZSBzYW1lIC4uLioqPC9zcGFuPg==\"><span class='gt_from_md'><span style='color: #666666;'><strong>… stayed about the same …</strong></span></span></span></td>\n    </tr>\n    \n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"country\"><span data-qmd-base64=\"KipDb3VudHJ5Kio=\"><span class='gt_from_md'><strong>Country</strong></span></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"perc_change\"></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"perc_change_num\"><span style='white-space: nowrap;'><strong>Change vs. 2024</strong></span></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"country\" class=\"gt_row gt_left\" style=\"white-space:nowrap;\">U.K.</td>\n<td headers=\"perc_change\" class=\"gt_row gt_center\" style=\"color: #666666;\">-2%</td>\n<td headers=\"perc_change_num\" class=\"gt_row gt_right\"><div style=\"display: flex; align-items: center; justify-content: center;\">\n  <div style=\"position: relative; width: 100%; height: 8px;\">\n    <div style=\"position: absolute; left: 50%; top: -4px; bottom: 4px;width: 2px; height: 16px; background: #ccc;\"></div>\n    <div style=\"position: absolute; right: 50%; top: 0; \n                background: #666666; height: 8px; width: 8%; \n                transform: translateX(20%); \n                border-radius: 3px;\"></div>\n  </div>\n</div></td></tr>\n    <tr><td headers=\"country\" class=\"gt_row gt_left\" style=\"white-space:nowrap;\">France</td>\n<td headers=\"perc_change\" class=\"gt_row gt_center\" style=\"color: #666666;\">-2%</td>\n<td headers=\"perc_change_num\" class=\"gt_row gt_right\"><div style=\"display: flex; align-items: center; justify-content: center;\">\n  <div style=\"position: relative; width: 100%; height: 8px;\">\n    <div style=\"position: absolute; left: 50%; top: -4px; bottom: 4px;width: 2px; height: 16px; background: #ccc;\"></div>\n    <div style=\"position: absolute; right: 50%; top: 0; \n                background: #666666; height: 8px; width: 8%; \n                transform: translateX(20%); \n                border-radius: 3px;\"></div>\n  </div>\n</div></td></tr>\n    <tr><td headers=\"country\" class=\"gt_row gt_left\" style=\"white-space:nowrap;\">Colombia</td>\n<td headers=\"perc_change\" class=\"gt_row gt_center\" style=\"color: #666666;\">-2%</td>\n<td headers=\"perc_change_num\" class=\"gt_row gt_right\"><div style=\"display: flex; align-items: center; justify-content: center;\">\n  <div style=\"position: relative; width: 100%; height: 8px;\">\n    <div style=\"position: absolute; left: 50%; top: -4px; bottom: 4px;width: 2px; height: 16px; background: #ccc;\"></div>\n    <div style=\"position: absolute; right: 50%; top: 0; \n                background: #666666; height: 8px; width: 8%; \n                transform: translateX(20%); \n                border-radius: 3px;\"></div>\n  </div>\n</div></td></tr>\n    <tr><td headers=\"country\" class=\"gt_row gt_left\" style=\"white-space:nowrap;\">Italy</td>\n<td headers=\"perc_change\" class=\"gt_row gt_center\" style=\"color: #666666;\">0%</td>\n<td headers=\"perc_change_num\" class=\"gt_row gt_right\"><div style=\"display: flex; align-items: center; justify-content: center;\">\n  <div style=\"position: relative; width: 100%; height: 8px;\">\n    <div style=\"position: absolute; left: 50%; top: -4px; bottom: 4px;width: 2px; height: 16px; background: #ccc;\"></div>\n    <div style=\"position: absolute; left: 50%; top: 0; \n                background: #666666; height: 8px; width: 0%; \n                transform: translateX(0); \n                border-radius: 3px;\"></div>\n  </div>\n</div></td></tr>\n    <tr><td headers=\"country\" class=\"gt_row gt_left\" style=\"white-space:nowrap;\">Philippines</td>\n<td headers=\"perc_change\" class=\"gt_row gt_center\" style=\"color: #666666;\">+1%</td>\n<td headers=\"perc_change_num\" class=\"gt_row gt_right\"><div style=\"display: flex; align-items: center; justify-content: center;\">\n  <div style=\"position: relative; width: 100%; height: 8px;\">\n    <div style=\"position: absolute; left: 50%; top: -4px; bottom: 4px;width: 2px; height: 16px; background: #ccc;\"></div>\n    <div style=\"position: absolute; left: 50%; top: 0; \n                background: #666666; height: 8px; width: 4%; \n                transform: translateX(0); \n                border-radius: 3px;\"></div>\n  </div>\n</div></td></tr>\n    <tr><td headers=\"country\" class=\"gt_row gt_left\" style=\"white-space:nowrap;\">Greece</td>\n<td headers=\"perc_change\" class=\"gt_row gt_center\" style=\"color: #666666;\">+1%</td>\n<td headers=\"perc_change_num\" class=\"gt_row gt_right\"><div style=\"display: flex; align-items: center; justify-content: center;\">\n  <div style=\"position: relative; width: 100%; height: 8px;\">\n    <div style=\"position: absolute; left: 50%; top: -4px; bottom: 4px;width: 2px; height: 16px; background: #ccc;\"></div>\n    <div style=\"position: absolute; left: 50%; top: 0; \n                background: #666666; height: 8px; width: 4%; \n                transform: translateX(0); \n                border-radius: 3px;\"></div>\n  </div>\n</div></td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n</div>\n<div style=\"flex: 1; min-width: 0;\">\n<div id=\"svvnoxdanj\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#svvnoxdanj table {\n  font-family: franklin-medium, system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#svvnoxdanj thead, #svvnoxdanj tbody, #svvnoxdanj tfoot, #svvnoxdanj tr, #svvnoxdanj td, #svvnoxdanj th {\n  border-style: none;\n}\n\n#svvnoxdanj p {\n  margin: 0;\n  padding: 0;\n}\n\n#svvnoxdanj .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: 500;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: 100%;\n  border-top-style: hidden;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#svvnoxdanj .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#svvnoxdanj .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#svvnoxdanj .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 9px;\n  padding-bottom: 11px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#svvnoxdanj .gt_heading {\n  background-color: #FFFFFF;\n  text-align: left;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#svvnoxdanj .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#svvnoxdanj .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 1px;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#svvnoxdanj .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: 500;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#svvnoxdanj .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: 500;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#svvnoxdanj .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#svvnoxdanj .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#svvnoxdanj .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 1px;\n  border-bottom-color: #FFFFFF;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#svvnoxdanj .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#svvnoxdanj .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#svvnoxdanj .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#svvnoxdanj .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#svvnoxdanj .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#svvnoxdanj .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#svvnoxdanj .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#svvnoxdanj .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#svvnoxdanj .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#svvnoxdanj .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#svvnoxdanj .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#svvnoxdanj .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#svvnoxdanj .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#svvnoxdanj .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#svvnoxdanj .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#svvnoxdanj .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#svvnoxdanj .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#svvnoxdanj .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#svvnoxdanj .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#svvnoxdanj .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#svvnoxdanj .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#svvnoxdanj .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#svvnoxdanj .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#svvnoxdanj .gt_left {\n  text-align: left;\n}\n\n#svvnoxdanj .gt_center {\n  text-align: center;\n}\n\n#svvnoxdanj .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#svvnoxdanj .gt_font_normal {\n  font-weight: normal;\n}\n\n#svvnoxdanj .gt_font_bold {\n  font-weight: bold;\n}\n\n#svvnoxdanj .gt_font_italic {\n  font-style: italic;\n}\n\n#svvnoxdanj .gt_super {\n  font-size: 65%;\n}\n\n#svvnoxdanj .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#svvnoxdanj .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#svvnoxdanj .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#svvnoxdanj .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#svvnoxdanj .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#svvnoxdanj .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#svvnoxdanj .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#svvnoxdanj .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#svvnoxdanj div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" style=\"table-layout:fixed;width:100%;\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <colgroup>\n    <col style=\"width:50%;\"/>\n    <col style=\"width:50%;\"/>\n    <col style=\"width:50%;\"/>\n  </colgroup>\n  <thead>\n    <tr class=\"gt_heading\">\n      <td colspan=\"3\" class=\"gt_heading gt_title gt_font_normal gt_bottom_border\" style><span data-qmd-base64=\"KiouLi4gYW5kIDxzcGFuIHN0eWxlPSdjb2xvcjogIzJiOWQ2YzsnPmluY3JlYXNlZDwvc3Bhbj4uKio=\"><span class='gt_from_md'><strong>… and <span style='color: #2b9d6c;'>increased</span>.</strong></span></span></td>\n    </tr>\n    \n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"country\"><span data-qmd-base64=\"KipDb3VudHJ5Kio=\"><span class='gt_from_md'><strong>Country</strong></span></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"perc_change\"></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"perc_change_num\"><span style='white-space: nowrap;'><strong>Change vs. 2024</strong></span></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"country\" class=\"gt_row gt_left\" style=\"white-space:nowrap;\">Costa Rica</td>\n<td headers=\"perc_change\" class=\"gt_row gt_center\" style=\"color: #2B9D6C;\">+3%</td>\n<td headers=\"perc_change_num\" class=\"gt_row gt_right\"><div style=\"display: flex; align-items: center; justify-content: center;\">\n  <div style=\"position: relative; width: 50%; height: 8px;\">\n    <div style=\"position: absolute; left: 50%; top: -8px; width: 2px; height: 16px; background: #ccc; transform: translateX(-1px);\"></div>\n    <div style=\"position: absolute; left: 50%; top: -4px; background: #2b9d6c; height: 8px; width: 7.69230769230769%; border-radius: 3px;\"></div>  \n  </div>\n</div></td></tr>\n    <tr><td headers=\"country\" class=\"gt_row gt_left\" style=\"white-space:nowrap;\">Brazil</td>\n<td headers=\"perc_change\" class=\"gt_row gt_center\" style=\"color: #2B9D6C;\">+4%</td>\n<td headers=\"perc_change_num\" class=\"gt_row gt_right\"><div style=\"display: flex; align-items: center; justify-content: center;\">\n  <div style=\"position: relative; width: 50%; height: 8px;\">\n    <div style=\"position: absolute; left: 50%; top: -8px; width: 2px; height: 16px; background: #ccc; transform: translateX(-1px);\"></div>\n    <div style=\"position: absolute; left: 50%; top: -4px; background: #2b9d6c; height: 8px; width: 10.2564102564103%; border-radius: 3px;\"></div>  \n  </div>\n</div></td></tr>\n    <tr><td headers=\"country\" class=\"gt_row gt_left\" style=\"white-space:nowrap;\">Australia</td>\n<td headers=\"perc_change\" class=\"gt_row gt_center\" style=\"color: #2B9D6C;\">+6%</td>\n<td headers=\"perc_change_num\" class=\"gt_row gt_right\"><div style=\"display: flex; align-items: center; justify-content: center;\">\n  <div style=\"position: relative; width: 50%; height: 8px;\">\n    <div style=\"position: absolute; left: 50%; top: -8px; width: 2px; height: 16px; background: #ccc; transform: translateX(-1px);\"></div>\n    <div style=\"position: absolute; left: 50%; top: -4px; background: #2b9d6c; height: 8px; width: 15.3846153846154%; border-radius: 3px;\"></div>  \n  </div>\n</div></td></tr>\n    <tr><td headers=\"country\" class=\"gt_row gt_left\" style=\"white-space:nowrap;\">Spain</td>\n<td headers=\"perc_change\" class=\"gt_row gt_center\" style=\"color: #2B9D6C;\">+8%</td>\n<td headers=\"perc_change_num\" class=\"gt_row gt_right\"><div style=\"display: flex; align-items: center; justify-content: center;\">\n  <div style=\"position: relative; width: 50%; height: 8px;\">\n    <div style=\"position: absolute; left: 50%; top: -8px; width: 2px; height: 16px; background: #ccc; transform: translateX(-1px);\"></div>\n    <div style=\"position: absolute; left: 50%; top: -4px; background: #2b9d6c; height: 8px; width: 20.5128205128205%; border-radius: 3px;\"></div>  \n  </div>\n</div></td></tr>\n    <tr><td headers=\"country\" class=\"gt_row gt_left\" style=\"white-space:nowrap;\">Portugal</td>\n<td headers=\"perc_change\" class=\"gt_row gt_center\" style=\"color: #2B9D6C;\">+8%</td>\n<td headers=\"perc_change_num\" class=\"gt_row gt_right\"><div style=\"display: flex; align-items: center; justify-content: center;\">\n  <div style=\"position: relative; width: 50%; height: 8px;\">\n    <div style=\"position: absolute; left: 50%; top: -8px; width: 2px; height: 16px; background: #ccc; transform: translateX(-1px);\"></div>\n    <div style=\"position: absolute; left: 50%; top: -4px; background: #2b9d6c; height: 8px; width: 20.5128205128205%; border-radius: 3px;\"></div>  \n  </div>\n</div></td></tr>\n    <tr><td headers=\"country\" class=\"gt_row gt_left\" style=\"white-space:nowrap;\">Japan</td>\n<td headers=\"perc_change\" class=\"gt_row gt_center\" style=\"color: #2B9D6C;\">+11%</td>\n<td headers=\"perc_change_num\" class=\"gt_row gt_right\"><div style=\"display: flex; align-items: center; justify-content: center;\">\n  <div style=\"position: relative; width: 50%; height: 8px;\">\n    <div style=\"position: absolute; left: 50%; top: -8px; width: 2px; height: 16px; background: #ccc; transform: translateX(-1px);\"></div>\n    <div style=\"position: absolute; left: 50%; top: -4px; background: #2b9d6c; height: 8px; width: 28.2051282051282%; border-radius: 3px;\"></div>  \n  </div>\n</div></td></tr>\n    <tr><td headers=\"country\" class=\"gt_row gt_left\" style=\"white-space:nowrap;\">Ireland</td>\n<td headers=\"perc_change\" class=\"gt_row gt_center\" style=\"color: #2B9D6C;\">+11%</td>\n<td headers=\"perc_change_num\" class=\"gt_row gt_right\"><div style=\"display: flex; align-items: center; justify-content: center;\">\n  <div style=\"position: relative; width: 50%; height: 8px;\">\n    <div style=\"position: absolute; left: 50%; top: -8px; width: 2px; height: 16px; background: #ccc; transform: translateX(-1px);\"></div>\n    <div style=\"position: absolute; left: 50%; top: -4px; background: #2b9d6c; height: 8px; width: 28.2051282051282%; border-radius: 3px;\"></div>  \n  </div>\n</div></td></tr>\n    <tr><td headers=\"country\" class=\"gt_row gt_left\" style=\"white-space:nowrap;\">Argentina</td>\n<td headers=\"perc_change\" class=\"gt_row gt_center\" style=\"color: #2B9D6C;\">+39%</td>\n<td headers=\"perc_change_num\" class=\"gt_row gt_right\"><div style=\"display: flex; align-items: center; justify-content: center;\">\n  <div style=\"position: relative; width: 50%; height: 8px;\">\n    <div style=\"position: absolute; left: 50%; top: -8px; width: 2px; height: 16px; background: #ccc; transform: translateX(-1px);\"></div>\n    <div style=\"position: absolute; left: 50%; top: -4px; background: #2b9d6c; height: 8px; width: 100%; border-radius: 3px;\"></div>  \n  </div>\n</div></td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n</div>\n</div>\n<div style=\"width: 50%; max-width: 1000px; margin: 5px auto 0 auto; text-align: left; font-family: &#39;franklin-medium&#39;, &#39;Libre Franklin&#39;, Arial, sans-serif; font-weight: 500; font-size: 0.85em; line-height: 1.1; padding-left: 20px;\"><span style='color:#707070;'>Source: Airlines Reporting Corporation &bull; Data covers flight bookings made between Feb. 1 and April 13 for travel between Memorial Day and Labor Day, compared to the same period last year.</span></div>\n</div>\n```\n\n:::\n:::\n\n\n\n:::\n\n<br>\nUnlike the line graphs from the original article, showing the Intl. Arrivals, where the graph was embedded as an image, here I was able to extract the actual data using the tag id pointing out to the table using [Selector Gadget](https://g.co/kgs/zQmpZoP) - a free reliable Chrome Extension that can be used to identify either the CSS selector or Xpath of site elements - *in tandem* with `{rvest}` to read in the embedded data from said selector into a tibble.<br> Note that within `{gtExtras}`, there already is a New York Times custom theme table using `gtExtras::gt_theme_nytimes()`, but did not closely match the style of the headers or the overall style of the tables; however it's good to know if you are working with your own data (not replicating another piece), and you're just ready to use a starter template or its boilerplate to at least test how it looks, if nothing else. <br> Overall, I think this is a fairly solid replication of the tables from the original, a piece I've enjoyed creating as it involved fairly advanced customization - I'd say it was deceptively simple to re-create, but worth it. <br> **One thing to call out** however is that these tables are optimized for desktop viewing due to their 100% width formatting. Mobile users may experience cramped display issues; I will let you in on a secret - it turns out that I do not stand a chance against the Financial might of the NYT !<br>\n\n## **A Canadian boycott** {.text-justify}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#|echo: false\n#|message: false\n#|warning: false\n#|include: false\n\ntheme_set_custom()\n\ncar_xing_ca_us_borders_py <- read_csv('car_crossing_ca_us_borders.csv') |>\n  distinct()\n\ncar_xing_ca_us_borders_cy <- read_csv('car_crossing_ca_us_borders2.csv') |> \n  distinct()\n\n# i am testing with below filters \n# 1st, 2nd filter should only focus on Canadian nationals and or residents (article focuses on Canadian sentiment; with use of strong word such as boycott, so assuming we should look into Canada returns only, not Intl. returns from US into Canada)\n# 3nd filter -> 'Vehicles' is a major group (when 'automobiles' and 'motorcycles' are subgroups) so filtering to 'Vehicles' so that not to inflate the counts, but the plot caption in the original article mentions 'by automobile' so we filter t\n# 4rd filter same idea as in 2nd but here -> 'Travellers' is a major group after a quick calculation for one day as an example where all values for that day sumn up to 'Travellers' value \n\nfiltered_to_canadian_cy <-\n  car_xing_ca_us_borders_cy |> \n  filter(\n    `Traveller characteristics` == 'Canadian resident visitors returning to Canada' & `Vehicle licence plate` == 'Canadian-plated vehicles entering Canada' & GEO == 'Canada' &\n    `Vehicle type` == 'Automobiles' & `Traveller type` == 'Travellers'\n    ) |> \n  # above combination of filters is giving me exactly 1 record per day (without any aggregations/roll ups) and it also gives me 116 days (Jan 1 through to Apr 26th, so we stick to those filters; likely correct)\n  select(\n    crossing_date = 1,\n    travel_characteristic = 6,\n    travel_type = 7, \n    vehicle_ttl = ncol(car_xing_ca_us_borders_cy) - 4\n    ) \n\n# same with py (or prior year)\nfiltered_to_canadian_py <- \n  car_xing_ca_us_borders_py |> \n    filter(\n    `Traveller characteristics` == 'Canadian resident visitors returning to Canada' & `Vehicle licence plate` == 'Canadian-plated vehicles entering Canada' & GEO == 'Canada' &\n    `Vehicle type` == 'Automobiles' & `Traveller type` == 'Travellers'\n    ) |> \n  select(\n    crossing_date = 1,\n    travel_characteristic = 6,\n    travel_type = 7, \n    vehicle_ttl = ncol(car_xing_ca_us_borders_py) - 4\n    ) |> # 117 days for py since it was leap year, so we filter out feb 29th to have a day over day comparison\n  filter(crossing_date != '2024-02-29')\n  \n# combining both sets \ncar_xing_change <- \n  filtered_to_canadian_cy |> \n  select(1, last_col()) |> \n  arrange(crossing_date) |> \n  bind_cols(\n    filtered_to_canadian_py |> \n      arrange(crossing_date) |> \n      select(ly_ttls = last_col())\n  ) |> \n  mutate(\n    change = vehicle_ttl - ly_ttls,\n    change_perc = (vehicle_ttl - ly_ttls) / ly_ttls\n    ) |> \n    filter(crossing_date < '2025-04-10') |> \n  # add a rolling 7 day avg\n  mutate(\n    rolling_avg_7day = zoo::rollmean(change_perc, k = 7, fill = NA, na.rm = TRUE)\n    ) |> \n  filter(!is.na(rolling_avg_7day))\n\n# first two months get abbreviated followed by a dot, while last two don't get abbreviated\nmonth_custom_labeller <- \n  map_chr(\n  .x = car_xing_change |> \n    pull(crossing_date) |> \n    lubridate::month() |> \n    unique() |> \n    sort(), \n  .f = function(x) \n    case_when(\n      x > 2 ~ month(x, label = TRUE, abbr = FALSE),\n      .default = paste0(month(x, label = TRUE, abbr = TRUE), '.')\n      )\n  )\n  \ncaption_text <- \"<span style='color:#707070;'>Sources: Statistics Canada/K. Kardous Note: Data shows journeys by Canadian residents returning to Canada from the<br> U.S. by automobile. A 7-day rolling average is shown.</span>\"\n\ncar_xing_change |> \n    mutate(\n        y_pos = pmax(rolling_avg_7day, 0),  # positive values only; this caps at 0 for < 0 so to create essentially two seperate series (one pos. and one negative)\n        y_neg = pmin(rolling_avg_7day, 0)   # negative values only\n    ) |> \n  ggplot(aes(x = crossing_date)) + \n  geom_area(aes(y = y_pos), fill = '#2b9d6c', outline.type = 'lower') +\n  geom_area(aes(y = y_neg), fill = '#d65f00', outline.type = 'lower') +\n  geom_hline(yintercept = 0) + \n  labs(\n    x = NULL, \n    y = NULL,\n    caption = caption_text\n    ) + \n  scale_y_continuous(\n    labels = scales::percent\n    ) + \n  scale_x_date(\n    breaks = seq(as.Date('2025-01-01'), as.Date('2025-04-09'), 'm'),\n    labels = month_custom_labeller\n    ) +\n  # arrow and text for negative region\n  annotate(\n    geom = \"segment\",\n    x = as.Date('2025-04-04'),    \n    xend = as.Date('2025-04-04'), \n    y = -0.02,                    \n    yend = -0.1,                 \n    colour = \"black\",             \n    arrow = arrow(length = unit(0.1, \"cm\"), angle = 50, type = 'open'),\n    linewidth = .35\n  ) + \n  annotate(\n    geom = 'text',\n    x = as.Date('2025-04-02'),\n    y = -0.06,\n    label = 'Less travel\\nthan last year', \n    hjust = 1,\n  ) +\n  # arrow and text for positive region\n    annotate(\n    geom = \"segment\",\n    x = as.Date('2025-04-04'),    \n    xend = as.Date('2025-04-04'), \n    y = 0.025,                    \n    yend = 0.1,                 \n    colour = \"black\",             \n    arrow = arrow(length = unit(0.1, \"cm\"), angle = 50, type = 'open'),\n    linewidth = .35\n  ) +\n    annotate(\n    geom = 'text',\n    x = as.Date('2025-04-02'),\n    y = 0.06,\n    label = 'More travel\\nthan last year', \n    hjust = 1\n    ) + \n    ggtitle(\n    label = \"<span style='color:black;'>Car crossings at the Canada-U.S. border\",\n    subtitle = \"<span style='color:#777777;'>Change compared with same day last year\"\n  ) +\n  theme(\n    panel.grid.minor.x = element_blank(),\n    panel.grid.major.x = element_blank(),\n    plot.title = element_markdown(hjust = .5),\n    plot.subtitle = element_markdown(hjust = .5),\n    plot.caption = element_markdown(\n      size = 8, hjust = 0, \n      margin = margin(l = -20, r = 10, t = 10, b = -5)\n      ),\n    axis.text = element_text(family = 'franklin-medium', face = 'bold'),\n    axis.text.x = element_text(hjust = -.9)\n  )\n```\n\n::: {.cell-output-display}\n![](holder-chokshi-granados-article-TravelToUS_files/figure-html/unnamed-chunk-5-1.png){width=2100}\n:::\n:::\n\n\n\n\nIf you look at the original, while the trends overall match unquestionably, meaning the intent/message conveyed here and in the original article is fundamentally the same, there are a few spikes that I did not manage to replicate; while I am confident in my methods; and that the numbers reflect a true 7 day moving average of car crossings; I can only assume some the data has been re-actualized, updated to go from preliminary to definitive in the time ellapsed between article publication and now (as of this writing).\n\n## **Big drops along the border**\n::: {.text-justify}\n**About the data:** You will find the data pushed as 2 separate csv files, one for March 2024, the other for March 2025, and combined as part of the pre-processing steps in the below code. The data tracks the no. of automobiles that crossed the CA -\\> US large/known border stations, focusing only on ports that with at least 1,000 crossings for 2025. To match the numbers in the article as closely as possible. I applied below filters:\n\n-   traveller_type is set to \"Travellers\" (aggregate roll up)\n-   traveller_characteristics is set to detect the \"Canadian residents\" pattern, regardless of direction (going to or returning from the US)\n-   Wherever specific levels radio filter selection were displayed, I kept them all blank/unchecked\n-   I had to filter out \"British Columbia\" returned as part of the `{tidygeocoder}` wrapper for the `arcgis` API to get approximate/realistic coordinates around which triangles (for YoY changed would be plotted); the reason is that it returned (in that case only) a whole province, when a much smaller geography is needed. <br>For more info on the pull itself, feel free to consult \n[Statistics Canada](https://www150.statcan.gc.ca/t1/tbl1/en/cv!recreate.action?pid=2410005301&selectedNodeIds=1D146,2D3,2D18,2D41,2D42,2D75,2D91&checkedLevels=2D1&refPeriods=20240301,20240301&dimensionLayouts=layout2,layout3,layout2,layout2&vectorDisplay=false). <br>\n\n**Data Validation:** Above link lands you on Niagara Falls - Queenston Bridge border crossing (figuratively); which I then used along with another data point to validate that I am getting fairly close results, if not identical to the NYT's original. <br> I like to start simple more often than not by looking at a very specific example and then 'work my way up' or generalize so to speak - once the foundation is solid; also known pompously as Hypothetico-inductive reasoning. <br>\nWhile the data matches very highly with the article's output for Niagara Falls (both the split into Niagara Falls - Queenston Bridge and  Niagara Falls - Rainbow Bridge), both in raw numbers (-101,250 fewer passengers vs. the article's 'Nearly 100,000' for YoY change for March) and % change (-41% vs -42%); I did get a significantly different figure for Douglas area (West coast). ~90k fewer passengers vs. the article's reported ~55k fewer crossings. <br>\nGiven the color scheme used in the article's legend, the bars for Douglas and Niagara share a similarly dark shade of orange; and given the fact that Niagara falls number match; I cannot explain/account for said differences. I will not dwell on investigating the matter further, as the idea is to either replicate or create an output that is inspired by a piece that caught my eye, while remaining highly faithful to the fundamental message conveyed by said piece.<br> \n\n**Data Pull/Wrangling steps:** The whole point of replicating or getting inspired by this article's data and output was this very visualization, so in a way this is the \"pièce de résistance\", so it warranted that a lot of work had to be potentially done to replicate below map; which it did ! <br>\nOn a high level, 4 main steps were crucial to replicate or come close to replicating said plot:\n\n-   After pulling the raw data from Statistics Canada, the first step was to map out actual coordinates of border crossings. From the `{tidygeocoder}` package, I used the `geo` wrapper function to call the `arcgis` API, after appending a string that would help better zero in, literally, on the likely coordinates needed as such `str_c(' Canada US border')`. A bounded region had to be set, outside of which contending coordinates were not included. Said coordinates would be along the Canada-US border, which includes to a signficant extent the 49th parallel/latitude in the western/center regions as well as various other boundaries through the Great Lakes and eastern/north eastern regions.\n\n-   I like the vertical fading into the \"Great White North\"; poetically adequate here. This entailed first measuring the distance between the center coordinates, called centroids (using `st_centroid()` from the `{sf}` package) and the points that will diverge _continuously_ from that center to top and/or center to bottom. This gradual distance was then linked to rgb codes that would incrementally go from light grey into pure white to finally create that gradient into pure white `rgb(255, 255, 255)`.\n\n-   Then triangles had to be displayed; I chose `st_polygon()` also from `{sf}` as it offers a high degree of customization, where defaults fail to do so. I needed very small bases and potentially very large heights (defaults shapes all offer variations of an equilateral triangle). The filling had to depict varying shades of the <span style=\"background-color: #d65f00; color: white; font-weight: bold; padding: 4px 8px; border-radius: 4px;\">that color</span> When the triangle heights would imply differences in % magnitude (downward triangles for negative - almost all of them, and upward ones for positive % change in no. of crossings). This did not utilize the 'fourth dimension' of the rgb color system, its alpha value; ranging from 0-1, as I needed a change in actual color, not color intensity. \n\n-   Finally, the data callouts for Douglas (West bound) and Niagara (East bound) were displayed using a textboxes using `geom_textbox()` that were linked to their respective spikes through a quarter circle, the former traced/going from right to left (counter-clockwise), the latter from left to right.\n\n:::\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#|echo: false\n#|message: false\n#|warning: false\n#|include: false\n\nlibrary(ggplot2)\nlibrary(tidyverse)\nlibrary(janitor)\nlibrary(rnaturalearth)\nlibrary(tidygeocoder)\nlibrary(sf)\nlibrary(rnaturalearthdata)\ntheme_set_custom()\n# steps to recreate last plot/map displaying drops in border crossings between Canada and US\n# tested it on 1 example/1 port with Only ports with at least 1,000 crossings in March 2025\n# and the results match the visual to a percentage + or -\n## go to below lins for 2024\n# https://www150.statcan.gc.ca/t1/tbl1/en/cv!recreate.action?pid=2410005301&selectedNodeIds=1D146,2D3,2D18,2D41,2D42,2D75,2D91&checkedLevels=2D1&refPeriods=20240301,20240301&dimensionLayouts=layout2,layout3,layout2,layout2&vectorDisplay=false\n## go to below link for 2025\n# https://www150.statcan.gc.ca/t1/tbl1/en/cv!recreate.action?pid=2410005301&selectedNodeIds=1D146,2D41,2D42&checkedLevels=2D1,2D2&refPeriods=20250301,20250301&dimensionLayouts=layout3,layout3,layout3,layout2&vectorDisplay=false\n\n# filters applied to test on Niagara Falls - Queenston Bridge\n# \" GEOGRAPHY\n# Select specific levels only -> keep blank\n# Niagara Area -> check only Niagara Falls - Queenston Bridge\n#  TRAVELLER CHARACTERISITCS\n# Select specific levels only -> keep blank\n# Canadian-resident visitors returning to Canada -> check only Canadian residents returning from the United States of America \n#  TRAVELLER TYPE\n# Keep defaults (all checked; 'Travellers' is a the final rollup number/totl)\n#  REFERENCE PERIOD\n# March 2024\n# \n# SAME EXACT STEPS FOR 2025\n\n# DOWNLOAD BOTH AS CSVs and select 'Download selected data (for database loading) \"\n# (56331 - 103307) / 103307 # Niagara Falls - Rainbow Bridge\n# (90202 - 144738) / 144738 # Niagara Falls - Queenston Bridge\n# (0.3768 + 0.4547 ) / 2\n\n# let's try to recreate those figures now that we have loaded the full datasets\nmap_data_ca_xings <- \n  read.csv('2024_ca_us_ttl_xing_main_ports.csv') |> \n  # mutate(year = 2025) |> \n  clean_names() |> \n  bind_rows(\n    read_csv('2025_ca_us_ttl_xing_main_ports.csv') |> \n      # mutate(year = 2024) |> \n      clean_names()\n  ) |> \n  as_tibble()\n\ninvisible(\n  {\n  map_data_ca_xings |> \n    mutate(\n      ref_year = word(ref_date, 1, sep = '\\\\-')\n    ) |> \n    filter(\n      traveller_type == 'Travellers' &\n        geo %in% c('Niagara Falls - Queenston Bridge', 'Niagara Falls - Rainbow Bridge') &\n        str_detect(traveller_characteristics, 'Canadian residents')\n    ) |> \n    count(ref_year, geo, crossings = value) |> \n    summarise(\n      perc_change_niagara_busiest_2ports = (\n        sum(if_else(ref_year == 2025, crossings, 0)) - sum(if_else(ref_year == 2024, crossings, 0))\n      ) / \n        sum(if_else(ref_year == 2024, crossings, 0))\n    ) # 41% decline - article says 42%; close enough; some values, especially for 2025 may have been preliminary and may have been slightly adjusted \n  }\n)\n\n# let's create a function now that loops thru all major ports name and generate a port name by % decline (2 column tibble)\nport_name_list <- map_data_ca_xings |> pull(geo) |> unique()\nperc_change_by_port <- function(x, port_name){\n  \n  map_data_ca_xings |> \n    mutate(\n      ref_year = word(ref_date, 1, sep = '\\\\-')\n    ) |> \n    filter(\n      traveller_type == 'Travellers' & \n        str_detect(traveller_characteristics, 'Canadian residents') &\n        geo %in% port_name\n    ) |> \n    count(ref_year, geo, crossings = value) |> \n    filter(crossings >= 1000) |> \n    summarise(\n      perc_change = (\n        sum(if_else(ref_year == 2025, crossings, 0)) - sum(if_else(ref_year == 2024, crossings, 0))\n      ) / \n        sum(if_else(ref_year == 2024, crossings, 0)),\n      .by = geo\n    ) |> \n    filter(geo != 'Canada' & !is.na(perc_change) & between(abs(perc_change), 0, 1)) |> \n    mutate_if(is.numeric, function(x) round(x, 2))\n}\nport_names_with_perc_changes <- map_dfr(.x = port_name_list, ~ perc_change_by_port(port_name = .x)) \n# Canada as a whole country, has seen 24% fewer passengers in March 2025 vs. March 2024\n# adding lat/longs to then be able to add as a alayer on the map\nport_coords <- tribble(\n  ~geo, ~latitude, ~longitude,\n  \"Niagara Falls - Queenston Bridge\",        43.1633, -79.0507,\n  \"Niagara Falls - Rainbow Bridge\",          43.0896, -79.0703,\n  \"Niagara Falls - Whirlpool Bridge\",        43.1051, -79.0645,\n  \"St. Stephen - 3rd Bridge\",                45.1856, -67.2792,\n  \"St. Stephen - ferry and other locations\", 45.2025, -67.2783,\n  \"St-Armand/Philipsburg\",                   45.0412, -73.0486,\n  \"Stanstead: Route 55\",                     45.0036, -72.0981,\n  \"Stanstead: Route 143\",                    45.0066, -72.1047,\n  \"Lacolle: Route 221\",                      45.0878, -73.3717,\n  \"Lacolle: Route 223\",                      45.0861, -73.3597,\n  \"St-Bernard-de-Lacolle: Highway 15\",       45.0051, -73.3723,\n  \"Douglas\",                                 49.0033, -122.7578,\n  \"Pacific Highway\",                         49.0038, -122.7382,\n  \"Abbotsford/Huntingdon\",                   49.0027, -122.2555\n)\n# not run\n# port_names_with_perc_changes |>\n#   left_join(\n#     port_coords\n#   ) |>\n#   summarise(\n#     na_prop = 1 - mean(is.na(latitude))\n#     ) # currently only a 10% match rate from online searches, so let's explore tidygeoder package to get more granular\n# and see if we can extend the matching to at least 60-70% then we can at least go from there\n\nyet_to_match <- port_names_with_perc_changes |> \n  left_join(\n    port_coords\n  ) |> \n  filter(is.na(latitude)) |> \n  pull(geo) |> \n  str_c(' Canada US border')\n\n# writing an if statement to check if geocode_arcgis is already created a temp qs file, so that we avoid redundant api calls (every time we run/render the doc)\ncache_file <- \"geocoded.qs\"\ngeocode_arcgis <- if (file.exists(cache_file)) {\n  qread(cache_file)\n} else {\n  geocode_arcgis <- map_dfr(yet_to_match, ~ geo(address = .x, method = \"arcgis\"))\n  qsave(geocode_arcgis, cache_file)\n  geocode_arcgis\n}\n\n# this massively improved the matches- but let's see if those coordinates realisticall can be considered \n# border regions between CA and US \n\n# now onto actual building of plot elements that will go into final output\n\n#|echo: false\n#|message: false\n#|warning: false\n#|include: false\n#|eval: false\nlibrary(ggplot2)\nlibrary(tidyverse)\nlibrary(janitor)\nlibrary(rnaturalearth)\nlibrary(tidygeocoder)\nlibrary(sf)\nlibrary(rnaturalearthdata)\ntheme_set_custom()\n\ninvisible(\n  {\n    validate_border_crossings <- function(geocoded_df, max_km_from_49th = 200) {\n      \n      # canada rough bounds\n      canada_lat <- c(41.5, 84.0)\n      canada_lon <- c(-141.0, -52.0)\n      \n      # simple distance to 49th parallel (main border)\n      distance_to_49th <- function(lat) abs(lat - 49.0) * 111  # ~111 km per degree latitude\n      \n      geocoded_df |> # geocode_arcgis was here, changed to geocoded_df\n        filter(!is.na(lat), !is.na(long)) |>\n        mutate(\n          within_canada = lat >= canada_lat[1] &\n            lat <= canada_lat[2] &\n            long >= canada_lon[1] &\n            long <= canada_lon[2],\n          \n          km_from_49th = distance_to_49th(lat),\n          \n          is_valid = within_canada & km_from_49th <= max_km_from_49th,\n          \n          status = case_when(\n            !within_canada ~ \"outside canada bounds\",\n            km_from_49th > max_km_from_49th ~ paste0(\"too far out (\", round(km_from_49th), \"km)\"),\n            TRUE ~ \"valid\"\n          )\n        )\n    }\n    \n    validated_coords <- validate_border_crossings(geocode_arcgis, max_km_from_49th = 300)\n    # using above threshold to sorta account for US 'curvature' into Canada, especially on the North-East region,\n    # as the border is not jsut one latitude/'horizontal' line\n    valid_coords <-\n      validated_coords |>\n      filter(is_valid) |>\n      select(geo = address, lat, long) # this has moved from 10 matches up to 96 out of 140 ~ 70% match rate\n    # looking at no. of spikes in the article, 96 spikes should hopefully cover most if not all location of spikes in\n    # the article, which from visual insepction, looks like around 50 are draw/plotted on the Canada/US map/border\n    \n    # combine all tibbles into one with perc_changes\n    # spike_prep is defined but not explicitly used later, spike_prep_sf is the key one\n    spike_prep <- port_names_with_perc_changes |>\n      filter(geo != 'British Columbia') |> # filter out BC early\n      left_join(\n        port_coords,\n        join_by(geo == geo)\n      ) |>\n      left_join(\n        valid_coords |>\n          mutate(\n            geo = str_remove(geo, ' Canada US border')\n          ),\n        join_by(geo == geo)\n      ) |>\n      mutate(\n        latitude = coalesce(latitude, lat),\n        longitude = coalesce(longitude, long)\n      ) |>\n      filter(!is.na(latitude)) |>\n      select(geo:longitude)\n  }\n)\n## starting the work on the map\n\n# get map data\ninvisible({\n  countries <-\n    ne_countries(scale = \"medium\", returnclass = \"sf\") %>%\n    filter(name %in% c(\"United States of America\", \"Canada\"))\n})\ninvisible(capture.output({\n  # get great lakes\n  lakes <- ne_download(\n    scale = \"medium\",\n    type = \"lakes\",\n    category = \"physical\",\n    returnclass = \"sf\"\n  ) %>%\n    filter(\n      name %in% c(\n        \"Lake Ontario\", \"Lake Erie\", \"Lake Huron\",\n        \"Lake Michigan\", \"Lake Superior\")\n    ) })\n)\n\n# crop to focus area - remove alaska\nmap_bounds <- list(\n  xmin = -125, xmax = -65,\n  ymin = 41, ymax = 52\n)\n# filter out Alaska from US (longitude > -140 is roughly Alaska)\ncontinental_us_canada <-\n  countries |>\n  mutate(\n    # create geometries without Alaska\n    geometry = case_when(\n      name == \"United States of America\" ~ st_crop(\n        geometry, xmin = -130, ymin = 20, xmax = -60, ymax = 50\n      ),\n      TRUE ~ geometry\n    )\n  ) |>\n  # remove any empty geometries after cropping\n  filter(!st_is_empty(geometry))\n\n# combine all tibbles into one with perc_changes\nspike_prep_sf <-\n  port_names_with_perc_changes |>\n  filter(geo != 'British Columbia') |> # filter out \"British Columbia\" here\n  left_join(\n    port_coords,\n    join_by(geo == geo)\n  ) |>\n  left_join(\n    valid_coords |>\n      mutate(\n        geo = str_remove(geo, ' Canada US border')\n      ),\n    join_by(geo == geo)\n  ) |>\n  mutate(\n    latitude = coalesce(latitude, lat),\n    longitude = coalesce(longitude, long)\n  ) |>\n  filter(!is.na(latitude)) |>\n  select(geo:longitude) |> # Make sure perc_change is carried through if it exists in port_names_with_perc_changes\n  st_as_sf(\n    coords = c(\"longitude\", \"latitude\"),\n    crs = 4326, agr = \"constant\",\n    remove = FALSE\n  )\n\n# generating regions for easier filtering of spikes\ncrossing_data <-\n  spike_prep_sf |> # This now uses the BC-filtered data\n  filter(\n    abs(perc_change) <= .50 & longitude >= -122.76 & #exclude far west/Vancouver area and start at Douglas\n      !geo %in% c('Kelowna', 'Calgary Area', 'Calgary', 'Regina', '')\n  ) |>\n  mutate(\n    perc_change = if_else(between(perc_change, -.39, -.23), perc_change / 10, perc_change)\n  ) |>\n  # filter to match article criteria - only significant declines\n  filter(\n    abs(perc_change) <= .45\n  ) %>%\n  # add regional grouping for better selection\n  mutate(\n    region = case_when(\n      longitude < -115 ~ \"west_coast\",\n      longitude >= -115 & longitude < -100 ~ \"prairie\",\n      longitude >= -100 & longitude < -85 ~ \"central\",\n      longitude >= -85 ~ \"east\",\n      TRUE ~ \"other\"\n    ),\n    normalized_heights = if (n() > 0 && any(!is.na(perc_change))) abs(perc_change) / max(abs(perc_change), na.rm = TRUE) else 0 # handle empty or all NA cases\n  )\n\n\n# select representative spikes by region to match article count (~40-50 total)\nselected_spikes <-\n  crossing_data |>\n  filter(latitude <= 49.5 & longitude < -65) |>\n  group_by(region) |>\n  arrange(perc_change) |> # most negative first\n  mutate(\n    no = as.integer(case_when(\n      region == \"west_coast\" ~ 12,\n      region == \"prairie\" ~ 8,\n      region == \"central\" ~ 6,\n      region == \"east\" ~ 15,\n      TRUE ~ 3)\n    )\n  ) |>\n  ungroup() |>\n  slice(.by = region, 1:no[1]) |> \n  select(-no) |>\n  bind_rows(\n    # pull select positive changes\n    crossing_data |>\n      filter(perc_change > 0) |>\n      filter(longitude < -65)\n  )\n\n\n# transform points to projected coordinate system; original is more elliptic in shape rather than a 'straight' plane\nselected_spikes_projected <-\n  selected_spikes |> # This is now BC-filtered\n  # filter(geo != 'British Columbia') |> # already filtered\n  st_transform(crs = \"+proj=aeqd +lat_0=45 +lon_0=-100 +x_0=0 +y_0=0\")\n\n# extract projected coordinates\nselected_spikes_coords <-\n  selected_spikes_projected |>\n  mutate(\n    proj_x = st_coordinates(geometry)[, 1],\n    proj_y = st_coordinates(geometry)[, 2]\n  ) |>\n  st_drop_geometry()\n\n# create triangles using projected coordinates\ncreate_projected_triangles <- function(data, height_scalar = 1) {\n  \n  # height_mult <<- height_scalar # Avoid using global assignment if possible\n  local_height_mult <- height_scalar\n  # function to create a triangle for each point using projected coordinates\n  create_triangle <- function(x, y, perc_change, normalized_heights, current_height_mult) {\n    \n    # base width and height in projected units (meters)\n    base_width <- 8e4  # 80km base width\n    height <- abs(normalized_heights) * current_height_mult * 4e5  # scale height based on normalized perc change\n    \n    # triangle vertices - purely vertical orientation\n    if (perc_change < 0) {\n      # downward pointing triangle for vast majority of cases\n      vertices <- data.frame(\n        x = c(x - base_width, x + base_width, x, x - base_width),\n        y = c(y, y, y - height, y)\n      )\n    } else {\n      # upward pointing triangle; only for a couple of instances\n      vertices <- data.frame(\n        x = c(x - base_width, x + base_width, x, x - base_width),\n        y = c(y, y, y + height, y)\n      )\n    }\n    # create polygon geometry\n    st_polygon(list(as.matrix(vertices)))\n  }\n  \n  # create triangles for each point\n  triangles <-\n    data |>\n    rowwise() |>\n    mutate(\n      triangle_geom = list(create_triangle(proj_x, proj_y, perc_change, normalized_heights, local_height_mult))\n    ) |>\n    ungroup()\n  \n  # convert to sf object with triangle geometries\n  triangle_sf <-\n    triangles |>\n    mutate(\n      geometry = st_sfc(triangle_geom, crs = \"+proj=aeqd +lat_0=45 +lon_0=-100 +x_0=0 +y_0=0\")\n    ) |>\n    st_sf()\n  \n  return(triangle_sf)\n}\n\n# create triangle geometries using projected coordinates\n# ensure selected_spikes_coords is not empty before calling\ntriangle_sf <- create_projected_triangles(selected_spikes_coords, height_scalar = 2.5)\n\n# add no. of crossing as well to base color fill on, low raw no. of crossings/change get ligher orange color, vs. darker for higher ones\n# so spike height becomes a factor % change while color that of the raw no. change\n\n# create the crossings data with error checking\ncrossings_data_for_join <-\n  map_data_ca_xings |>\n  mutate(\n    ref_year = word(ref_date, 1, sep = '\\\\-')\n  ) |>\n  filter(\n    traveller_type == 'Travellers' &\n      str_detect(traveller_characteristics, 'Canadian residents')\n  ) |>\n  reframe(\n    crossings_raw_change = sum(if_else(ref_year == \"2025\", value, 0)) - # ensure year is character for comparison if ref_year is character\n      sum(if_else(ref_year == \"2024\", value, 0)),\n    .by = geo\n  ) |>\n  filter(!is.na(crossings_raw_change))\n\n# perform the join with error checking\ntriangle_sf <- triangle_sf |>\n  left_join(crossings_data_for_join, by = \"geo\") |>\n  # handle any missing values\n  mutate(\n    crossings_raw_change = coalesce(crossings_raw_change, 0)\n  ) |>\n  # normalize raw changes for alpha scaling\n  mutate(\n    abs_raw_change = abs(crossings_raw_change),\n    # normalize to 0-1 range for alpha values, with safeguard for division by zero\n    max_abs_change = if (n() > 0 && any(!is.na(abs_raw_change))) max(abs_raw_change, na.rm = TRUE) else 0,\n    normalized_raw_change = if_else(\n      max_abs_change > 0,\n      abs_raw_change / max_abs_change,\n      0),\n    # create alpha values: min 0.2 for very small changes, max 0.8 for largest changes\n    alpha_value = 0.2 + (normalized_raw_change * 0.8)\n  ) |>\n  select(-max_abs_change)\n\n\n# transform countries first\ncountries_proj <- countries |>\n  st_transform(crs = \"+proj=aeqd +lat_0=45 +lon_0=-100 +x_0=0 +y_0=0\")\n\nlakes_proj <- lakes |>\n  st_transform(crs = \"+proj=aeqd +lat_0=45 +lon_0=-100 +x_0=0 +y_0=0\")\n\n# get the bounding box and expand it significantly for better fade effect\nbbox <- st_bbox(countries_proj)\nx_range <- bbox[3] - bbox[1]\ny_range <- bbox[4] - bbox[2]\n\n# expand bbox by 50% to create more fade area\nbbox_expanded <- c(\n  xmin = bbox[1] - 0.5 * x_range,\n  ymin = bbox[2] - 0.5 * y_range,\n  xmax = bbox[3] + 0.5 * x_range,\n  ymax = bbox[4] + 0.5 * y_range\n)\n\n# create a much finer grid for smoother gradient\ngrid_resolution <- 400  # increased for even smoother gradient\nx_seq <- seq(bbox_expanded[1], bbox_expanded[3], length.out = grid_resolution)\ny_seq <- seq(bbox_expanded[2], bbox_expanded[4], length.out = grid_resolution)\n\n# create vertical gradient for within-country areas\ngradient_data <- expand.grid(x = x_seq, y = y_seq) |>\n  mutate(\n    # convert to sf points to check intersection with countries\n    geometry = st_sfc(map2(x, y, ~st_point(c(.x, .y))), crs = st_crs(countries_proj))\n  ) |>\n  st_sf() |>\n  # check which points are within countries\n  mutate(\n    within_countries = lengths(st_intersects(geometry, countries_proj)) > 0\n  ) |>\n  st_drop_geometry() |>\n  mutate(\n    # calculate vertical position for gradient (center = 0)\n    y_center = 0,  # center of our projection\n    y_range_total = bbox_expanded[4] - bbox_expanded[2],\n    # normalize y position from center (-1 to 1, where 0 is center)\n    y_normalized = (y - y_center) / (y_range_total * 0.5),\n    # create vertical gradient: darker at center, lighter toward top/bottom\n    # distance from horizontal center line\n    dist_from_horizontal_center = abs(y_normalized),\n    # apply smooth transition function\n    vertical_fade = pmin(dist_from_horizontal_center^0.6, 1), # the higher the exponent, the 'faster' the fade; away from center, capts at 1\n    # create color values: #e0e0e0 at center fading to white at edges\n    # convert #e0e0e0 (224, 224, 224) to white (255, 255, 255)\n    red_value = 224 + (255 - 224) * vertical_fade,\n    green_value = 224 + (255 - 224) * vertical_fade,\n    blue_value = 224 + (255 - 224) * vertical_fade,\n    # create hex color\n    color_hex = rgb(red_value, green_value, blue_value, maxColorValue = 255),\n    # only apply gradient within countries, white elsewhere\n    final_color = if_else(within_countries, color_hex, \"white\"),\n    # alpha - fully opaque within countries, transparent outside\n    alpha_value = if_else(within_countries, 1.0, 0.0) # this is for gradient_data alpha\n  )\n\n# create a mask for areas within the bounding box\nbbox_polygon <- st_polygon(list(rbind(\n  c(bbox_expanded[1], bbox_expanded[2]),\n  c(bbox_expanded[3], bbox_expanded[2]),\n  c(bbox_expanded[3], bbox_expanded[4]),\n  c(bbox_expanded[1], bbox_expanded[4]),\n  c(bbox_expanded[1], bbox_expanded[2])\n))) |>\n  st_sfc(crs = st_crs(countries_proj))\n\n# create the main plot with vertical gradient within countries\nmain_plot <- ggplot() +\n  # add white background\n  geom_raster(data = gradient_data,\n              aes(x = x, y = y),\n              fill = \"white\") +\n  # add the vertical gradient within countries only\n  geom_raster(data = gradient_data |> filter(within_countries),\n              aes(x = x, y = y, fill = final_color, alpha = alpha_value)) + # alpha here is for gradient\n  # use identity scales for the custom colors\n  scale_fill_identity() +\n  scale_alpha_identity() + # this will apply to gradient's alpha, and later legend rect's alpha\n  # add country boundaries\n  geom_sf(data = countries_proj,\n          fill = NA, color = \"white\", linewidth = 0.3) +\n  # Great Lakes\n  geom_sf(data = lakes_proj,\n          fill = \"white\", color = \"white\", linewidth = 0.1) +\n  # triangle spikes with alpha based on raw change magnitude\n  geom_sf(\n    data = triangle_sf, \n    aes(fill = if_else(perc_change < 0, I('#d65f00'), I('#2b9d6c'))), \n    size = 0.8,\n    alpha = pmin(triangle_sf$alpha_value, .7)\n  ) +\n  scale_fill_identity() + \n  # triangle color scale\n  # scale_color_manual(\n  #   values = c(\"negative\" = \"#d65f00\", \"positive\" = \"#2b9d6c\"),\n  #   guide = \"none\"\n  # ) +\n  # coordinate system\n  coord_sf(\n    xlim = c(-4e6, 4e6),\n    ylim = c(-1.75e6, 2.1e6),\n    expand = FALSE,\n    clip = 'off'\n  ) +\n  # clean theme\n  theme_void() +\n  theme(\n    plot.title = element_markdown(hjust = 0.5, size = 14, family = 'franklin', margin = margin(t = -10, b = 10)),\n    plot.background = element_rect(fill = \"white\", color = NA),\n    panel.background = element_rect(fill = \"white\", color = NA),\n    legend.position = 'none' # ggplot's auto legend is off, we are making a manual one\n  )\n\n# function to create the 1/4 circles for Douglas and Niagara Falls callouts\ndraw_quarter_circles <- function(start, end, radius = 400e3, x_offset = 0, y_offset = 0){\n  \n  # get angles and coords for a quarter of a acircle\n  angles <- seq(start, end, length.out = 1000) # reduced length.out for efficiency\n  # radius <- radius # already an argument\n  x_coords <- radius * cos(angles)\n  y_coords <- radius * sin(angles)\n  \n  # test with different offesets to match article's callout positioning\n  x_coords_with_offset <- x_coords + x_offset\n  y_coords_with_offset <- y_coords + y_offset\n  \n  # assign values to a tibble\n  quarter_circle_data <- tibble(x = x_coords_with_offset, y = y_coords_with_offset)\n  \n  # draw said 1/4 circles\n  path <- geom_path(\n    data = quarter_circle_data, aes(x = x, y = y) # simplified aes\n  )\n  \n  return(path)\n}\n\ntheme_set_custom() \n\n# draw 1/4 circles\nmain_plot_with_qrt_circles <-\n  main_plot +\n  geom_text(\n    aes(x = -150e3,\n        y = -550e3,  label = 'UNITED STATES'),\n    family = 'franklin',\n    size = 6,\n    color = '#a3a3a3'\n  ) +\n  geom_text(\n    aes(x = -200e3,\n        y = 950e3,  label = 'CANADA'),\n    family = 'franklin',\n    size = 6,\n    color = '#a3a3a3'\n  ) +\n  # douglas 1/4 circle\n  draw_quarter_circles(start = pi, end = 3 * pi/2, x_offset = -150e3 * 11.2, y_offset = -550e3 + 100e4) +\n  # niagara 1/4 circle\n  draw_quarter_circles(start = 0, end = pi/2, x_offset = -150e3 * -11.5, y_offset = -550e3 - 50e4)\n\ncall_outs_tibble <-\n  tibble(\n    label = c(\n      \"<b>~90,000 fewer<br> people crossed at<br> Douglas</b> in March<br>2025, a 43<br>percent decline.\",\n      \"<b>Nearly 102,000 fewer <br> people crossed at <br>Niagara Falls,</b> a 41 <br> percent decline.\"\n    ),\n    x = c(-150e3 * 15, -150e3 * -14),\n    y = c(-550e3 + 100e4, -550e3 - 75e4),\n    hjust = c(.5, 0.05),\n    vjust = c(0, 0.6)\n  )\n\n# add legend elements to the plot\nlegend_box <- pmin(\n  triangle_sf$alpha_value, .7\n  ) |> \n  sort() |>\n  enframe() |> \n  mutate(\n    normalized_values_01 = (value - min(value)) / (max(value) - min(value)),\n    color_bins = case_when(\n      normalized_values_01 <= .25 ~ '#e3cabd-10', \n      normalized_values_01 <= .50 ~ '#e0b69e-20',\n      normalized_values_01 <= .75 ~ '#db956a-30',\n      normalized_values_01 <=  1  ~ '#d76c21-40%',\n      TRUE ~ '#c7d8d0'\n      ),\n    labels = paste0('-', word(color_bins, -1, sep = '-')),\n    color_bins = word(color_bins, 1, sep = '-')\n  ) |> \n  select(color_bins, labels) |> \n  distinct() |> \n  ggplot(aes(x = labels, y = .5, fill = I(color_bins))) +\n  geom_tile() +\n  labs(\n    x = NULL, \n    y = 'Percentage change vs. last year'\n    ) + \n  # ggtitle(label = '<b>Big drops along the border<b>') +\n  theme(\n    axis.title.y  = element_text(angle = 0, size = 7, vjust = .5, face = 'bold'),\n    axis.text.x = element_text(size = 7, face = 'bold'),# vjust = .5, hjust = -1, \n    axis.text.y = element_blank(),\n    plot.background = element_rect(fill = \"white\", color = NA),\n    panel.background = element_rect(fill = \"white\", color = NA),\n    panel.grid.major.x = element_blank(),\n    panel.grid.major.y = element_blank(),\n    legend.position = 'none',\n    plot.margin = margin(t = 8)\n  )\n# plot callouts\nfinal_plot <-\n  main_plot_with_qrt_circles +\n  geom_textbox(\n    data = call_outs_tibble,\n    aes(x = x, y = y, label = label, hjust = hjust, vjust = vjust),\n    family = 'Libre Franklin',\n    width = unit(0.2, \"npc\"),\n    fill = NA,\n    size = c(3, 2.5),\n    color = 'black',\n    box.colour = NA,\n    orientation = \"upright\"\n  ) \n# plot legend box along with its (legend) name\nfinal_plot_with_legend <- final_plot +\n  annotation_custom(\n    grob = ggplotGrob(legend_box),\n    xmin = -2e6, xmax = 3e6,\n    ymin = 2.5e6, ymax = 2.8e6  \n  )\n\n# plot final with title using geom_text() to avoid running into margin/rendering erros + adding caption to plot\nfinal_plot_with_legend + \n  geom_text(\n    aes(x = 0, y = 2.85e6, label = \"Big drops along the border\"),\n    family = 'franklin',\n    size = 3.5,\n    fontface = 'bold',\n    color = 'black',\n    hjust = 0.3,\n    vjust = 0.5\n  ) + \n  labs(\n  caption = \"<span style='color:#707070; text-align: justify; width: 100%; display: block; padding-top: 25px;'>Source: Statistics Canada Note: The height of\n  each spike reflects the change in passenger numbers this<br>March versus the same month last year. Only ports with at least 1,000 crossings in March 2025\n  are shown.</span>\"\n  ) + \n  theme(\n    plot.caption = element_markdown(margin(t = 50), size = 5, hjust = .5)\n    ) \n```\n\n::: {.cell-output-display}\n![](holder-chokshi-granados-article-TravelToUS_files/figure-html/unnamed-chunk-6-1.png){width=2100}\n:::\n:::\n\n\n\n\nOverall, I found this article powerful, clear, and its authors original in their use of data, so truly an enjoyable experience to have worked on 'deconstructing' the article backend to match the outputs as closely as I could.. thank you for taking the time to read this and more to come !\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}